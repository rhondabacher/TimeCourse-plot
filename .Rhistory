library(devtools)
runGitHub("lengning/soxtc_plot1")
library(shiny)
runGitHub("lengning/soxtc_plot1")
pool.in <- read.csv("~/Desktop/HUMAN_normEC.csv",row.names=1)
pool.in[1:5,1:5]
data.norm.human <- data.matrix(pool.in)+1
cnames <- colnames(data.norm.human)
h.ind <- as.numeric(substr(cnames,2,4))
day.ind <- ceiling(h.ind/24)
names(day.ind) <- cnames
day.col <- rainbow(13)
day.col[c(10,13)]<-c("darkblue","pink")
day.col[5:7]<-c("aquamarine","forestgreen","lightblue")
names(day.col) <- sort(unique(day.ind))
day.col.pool <- day.col[as.character(day.ind[cnames])]
feeding.s <- rbind(c(0,0),c(21,24),c(37,40),c(69,72),c(96,96),c(141,144),c(189,192),c(237,240))
x.which <- which(h.ind%in%c(1,50,100,150,200,288))
feeding.which <- feeding.s
feeding.which <- feeding.s[1:7,]
i = 1
par(mfrow=c(1,3),cex.lab=2, cex.axis=2, cex.main=2, mar=c(5,7,5,7))
plot(1, type="n", axes=F, xlab="", ylab="")
legend("top", paste("day", names(day.col)),col=day.col,ncol=3, lwd=2,cex=2)
plot(data.norm[input$name,]-1,pch=20,col=day.col.pool, main=input$name,ylab="normalized expression", xlab="hr",xaxt="n")
axis(1,x.which,c(1,50,100,150,200,288))
feeding.which <- feeding.s[1:7,]
for(i in 1:nrow(feeding.which))for(j in 1:2)feeding.which[i,j] <- which(h.ind==feeding.s[i,j])
pool.in <- read.csv("~/Desktop/HUMAN_normEC.csv",row.names=1)
data.norm.human <- data.matrix(pool.in)+1
cnames <- colnames(data.norm.human)
h.ind <- as.numeric(substr(cnames,2,4))
day.ind <- ceiling(h.ind/24)
names(day.ind) <- cnames
day.col <- rainbow(13)
day.col[c(10,13)]<-c("darkblue","pink")
day.col[5:7]<-c("aquamarine","forestgreen","lightblue")
names(day.col) <- sort(unique(day.ind))
day.col.pool <- day.col[as.character(day.ind[cnames])]
feeding.s <- rbind(c(0,0),c(21,24),c(37,40),c(69,72),c(96,96),c(141,144),c(189,192),c(237,240))
x.which <- which(h.ind%in%c(1,50,100,150,200,288))
feeding.which <- feeding.s
feeding.which <- feeding.s[1:7,]
for(i in 1:nrow(feeding.which))for(j in 1:2)feeding.which[i,j] <- which(h.ind==feeding.s[i,j])
pool.in <- read.csv("~/Desktop/HUMAN_normEC.csv",row.names=1)
data.norm.human <- data.matrix(pool.in)+1
cnames <- colnames(data.norm.human)
h.ind <- as.numeric(substr(cnames,2,4))
day.ind <- ceiling(h.ind/24)
names(day.ind) <- cnames
day.col <- rainbow(13)
day.col[c(10,13)]<-c("darkblue","pink")
day.col[5:7]<-c("aquamarine","forestgreen","lightblue")
names(day.col) <- sort(unique(day.ind))
day.col.pool <- day.col[as.character(day.ind[cnames])]
par(mfrow=c(1,3),cex.lab=2, cex.axis=2, cex.main=2, mar=c(5,7,5,7))
plot(1, type="n", axes=F, xlab="", ylab="")
legend("top", paste("day", names(day.col)),col=day.col,ncol=3, lwd=2,cex=2)
plot(data.norm[input$name,]-1,pch=20,col=day.col.pool, main=input$name,ylab="normalized expression", xlab="hr",xaxt="n")
par(mfrow=c(1,3),cex.lab=2, cex.axis=2, cex.main=2, mar=c(5,7,5,7))
plot(1, type="n", axes=F, xlab="", ylab="")
legend("top", paste("day", names(day.col)),col=day.col,ncol=3, lwd=2,cex=2)
plot(data.norm.human[input$name,]-1,pch=20,col=day.col.pool, main=input$name,ylab="normalized expression", xlab="hr",xaxt="n")
input<-c()
input$name = "T"
par(mfrow=c(1,3),cex.lab=2, cex.axis=2, cex.main=2, mar=c(5,7,5,7))
plot(1, type="n", axes=F, xlab="", ylab="")
legend("top", paste("day", names(day.col)),col=day.col,ncol=3, lwd=2,cex=2)
plot(data.norm.human[input$name,]-1,pch=20,col=day.col.pool, main=input$name,ylab="normalized expression", xlab="hr",xaxt="n")
axis(1,x.which,c(1,50,100,150,200,288))
for(i in 1:nrow(feeding.which))axis(3,feeding.which[i,],rep("",2),lwd=8,col="blue",col.ticks="white", lwd.ticks=.1)
plot(data.norm.human[input$name,],pch=20,col=day.col.pool, main=input$name,ylab="normalized expression + 1 (log scale)",
log="y",xlab="hr",xaxt="n")
axis(1,x.which,c(1,50,100,150,200,288))
for(i in 1:nrow(feeding.which))axis(3,feeding.which[i,],rep("",2),lwd=8,col="blue", col.ticks="white", lwd.ticks=.1)
day.col
par(mfrow=c(1,2),cex.lab=2, cex.axis=2, cex.main=2, mar=c(5,7,5,7))
plot(data.norm.human[input$name,]-1,pch=20,col=day.col.pool, main=input$name,ylab="normalized expression", xlab="hr",xaxt="n")
axis(1,x.which,c(1,50,100,150,200,288))
for(i in 1:nrow(feeding.which))axis(3,feeding.which[i,],rep("",2),lwd=8,col="blue",col.ticks="white", lwd.ticks=.1)
plot(data.norm.human[input$name,],pch=20,col=day.col.pool, main=input$name,ylab="normalized expression + 1 (log scale)",
log="y",xlab="hr",xaxt="n")
par(mfrow=c(1,2),cex.lab=2, cex.axis=2, cex.main=2, mar=c(5,7,5,7))
plot(data.norm.human[input$name,]-1,pch=20,col=day.col.pool, main=input$name,ylab="normalized expression", xlab="hr",xaxt="n")
data.norm.human[input$name,]-1
dim(data.norm.human)
plot(1:101, data.norm.human[input$name,]-1,pch=20,col=day.col.pool, main=input$name,ylab="normalized expression", xlab="hr",xaxt="n")
plot(1:101, data.norm.human[input$name,]-1,pch=20,col=day.col.pool, main=input$name,ylab="normalized expression", xlab="hr",xaxt="n")
par(mfrow=c(1,2),cex.lab=2, cex.axis=2, cex.main=2, mar=c(5,7,5,7))
plot(1:101, data.norm.human[input$name,]-1, pch=20, col=day.col.pool, main=paste0(input$name," human"),
ylab="Normalized Expression", xlab="Hour")
par(mfrow=c(1,2),cex.lab=2, cex.axis=2, cex.main=2)
plot(1:101, data.norm.human[input$name,]-1, pch=20, col=day.col.pool, main=paste0(input$name," human"),
ylab="Normalized Expression", xlab="Hour")
axis(1,x.which,c(1,50,100,150,200,288))
par(mfrow=c(1,1),cex.lab=2, cex.axis=2, cex.main=2)
plot(1:101, data.norm.human[input$name,]-1, pch=20, col=day.col.pool, main=paste0(input$name," human"),
ylab="Normalized Expression", xlab="Hour")
par(mfrow=c(1,1),cex.lab=2, cex.axis=1.4, cex.main=2)
plot(1:101, data.norm.human[input$name,]-1, pch=20, col=day.col.pool, main=paste0(input$name," human"),
ylab="Normalized Expression", xlab="Hour")
par(mfrow=c(1,1),cex.lab=2, cex.axis=1.4, cex.main=2)
plot(1:101, data.norm.human[input$name,]-1, pch=20, col=day.col.pool, main=paste0(input$name,", human"),
ylab="Normalized Expression", xlab="Hour")
axis(1,x.which,c(1,50,100,150,200,288))
pool.in <- read.csv("~/Desktop/HUMAN_normEC.csv",row.names=1)
data.norm.human.human <- data.matrix(pool.in)+1
pool.in <- read.csv("~/Desktop/HUMAN_normEC.csv",row.names=1)
data.norm.human <- data.matrix(pool.in)+1
pool.in <- read.csv("~/Desktop/MOUSE_normEC.csv",row.names=1)
data.norm.mouse <- data.matrix(pool.in)+1
day.col <- rainbow(13)
day.col[c(10,13)]<-c("darkblue","pink")
day.col[5:7]<-c("aquamarine","forestgreen","lightblue")
day.col
cnames.h <- colnames(data.norm.human)
cnames.h
h.ind.h <- as.numeric(substr(cnames,2,4))
h.ind.h
cnames.h
h.ind.h
h.ind.h <- as.numeric(substr(cnames,2,4)) + 3
h.ind.h
cnames <- colnames(data.norm.human)
cnames
as.numeric(substr(cnames,5,6))
h.ind <- as.numeric(substr(cnames,2,4))
h.ind
h.ind; length(h.ind)
h.ind[2:101] <- h.ind[2:101] + 3
t.v <- h.ind
names(t.v) <- cnames;
print(t.v)
t.v <- h.ind
names(t.v) <- cnames; print(t.v)
day.ind <- ceiling(unique(t.v)/24)
day.ind
length(day.ind)
names(day.ind) <- as.character(0:101)
day.ind <- ceiling(unique(t.v)/24)
names(day.ind) <- as.character(0:100)
day.ind
day.col <- rainbow(6)
day.col
names(day.col) <- sort(unique(day.ind))
day.col
day.col.pool <- day.col[as.character(day.ind)]
day.col.pool.full <- day.col[as.character(ceiling((t.v)/24))]
day.col.pool
day.col.pool.full
par(mfrow=c(2,2),cex.lab=2, cex.axis=1.4, cex.main=2)
plot(1:101, data.norm.human[input$name,]-1, pch=20, col=day.col.pool, main=paste0(input$name,", human"),
ylab="Normalized Expression", xlab="Hour")
plot(1:101, data.norm.human[input$name,]-1, pch=20, col=day.col.pool, main=paste0(input$name,", human"),
ylab="Normalized Expression", xlab="Hour")
par(mfrow=c(1,1),cex.lab=2, cex.axis=1.4, cex.main=2)
plot(1:101, data.norm.human[input$name,]-1, pch=20, col=day.col.pool, main=paste0(input$name,", human"),
ylab="Normalized Expression", xlab="Hour")
day.col <- rainbow(13)[1:6]
names(day.col) <- sort(unique(day.ind))
day.col.pool <- day.col[as.character(day.ind)]
day.col.pool.full <- day.col[as.character(ceiling((t.v)/24))]
plot(1:101, data.norm.human[input$name,]-1, pch=20, col=day.col.pool, main=paste0(input$name,", human"),
ylab="Normalized Expression", xlab="Hour")
plot(1:101, data.norm.human[input$name,]-1, pch=20, col=day.col.pool, main=paste0(input$name,", human"),
ylab="Normalized Expression", xlab="Hour")
par(mfrow=c(1,1),cex.lab=2, cex.axis=1.4, cex.main=2)
plot(1:101, data.norm.human[input$name,]-1, pch=20, col=day.col.pool, main=paste0(input$name,", human"),
ylab="Normalized Expression", xlab="Hour")
day.col <- rainbow(6)
names(day.col) <- sort(unique(day.ind))
day.col.pool <- day.col[as.character(day.ind)]
day.col.pool.full <- day.col[as.character(ceiling((t.v)/24))]
par(mfrow=c(1,1),cex.lab=2, cex.axis=1.4, cex.main=2)
plot(1:101, data.norm.human[input$name,]-1, pch=20, col=day.col.pool, main=paste0(input$name,", human"),
ylab="Normalized Expression", xlab="Hour")
day.col
day.col <- rainbow(6)
day.col[1]<-"darkyellow"
names(day.col) <- sort(unique(day.ind))
day.col.pool <- day.col[as.character(day.ind)]
day.col.pool.full <- day.col[as.character(ceiling((t.v)/24))]
par(mfrow=c(1,1),cex.lab=2, cex.axis=1.4, cex.main=2)
plot(1:101, data.norm.human[input$name,]-1, pch=20, col=day.col.pool, main=paste0(input$name,", human"),
ylab="Normalized Expression", xlab="Hour")
day.col <- rainbow(6)
day.col[1]<-"yellow4"
names(day.col) <- sort(unique(day.ind))
day.col.pool <- day.col[as.character(day.ind)]
day.col.pool.full <- day.col[as.character(ceiling((t.v)/24))]
par(mfrow=c(1,1),cex.lab=2, cex.axis=1.4, cex.main=2)
plot(1:101, data.norm.human[input$name,]-1, pch=20, col=day.col.pool, main=paste0(input$name,", human"),
ylab="Normalized Expression", xlab="Hour")
day.col <- rainbow(6)
day.col[1]<-"yellow3"
names(day.col) <- sort(unique(day.ind))
day.col <- rainbow(6)
day.col[2]<-"yellow3"
names(day.col) <- sort(unique(day.ind))
day.col.pool <- day.col[as.character(day.ind)]
day.col.pool.full <- day.col[as.character(ceiling((t.v)/24))]
par(mfrow=c(1,1),cex.lab=2, cex.axis=1.4, cex.main=2)
plot(1:101, data.norm.human[input$name,]-1, pch=20, col=day.col.pool, main=paste0(input$name,", human"),
ylab="Normalized Expression", xlab="Hour")
day.col <- rainbow(6)
day.col[2]<-"yellow2"
names(day.col) <- sort(unique(day.ind))
day.col.pool <- day.col[as.character(day.ind)]
day.col.pool.full <- day.col[as.character(ceiling((t.v)/24))]
par(mfrow=c(1,1),cex.lab=2, cex.axis=1.4, cex.main=2)
plot(1:101, data.norm.human[input$name,]-1, pch=20, col=day.col.pool, main=paste0(input$name,", human"),
ylab="Normalized Expression", xlab="Hour")
day.col.pool
t.v
day.ind <- ceiling(unique(t.v)/24)
day.ind
day.col <- rainbow(6)
day.col[2]<-"yellow2"
names(day.col) <- sort(unique(day.ind))
day.col.pool <- day.col[as.character(day.ind)]
day.col.pool.full <- day.col[as.character(ceiling((t.v)/24))]
par(mfrow=c(1,1),cex.lab=2, cex.axis=1.4, cex.main=2)
plot(1:101, data.norm.human[input$name,]-1, pch=20, col=day.col.pool, main=paste0(input$name,", human"),
ylab="Normalized Expression", xlab="Hour")
plot(1:101, data.norm.human[input$name,]-1, pch=20, col=day.col.pool.full, main=paste0(input$name,", human"),
ylab="Normalized Expression", xlab="Hour")
cnames <- colnames(data.norm.mouse)
cnames
h.ind <- as.numeric(substr(cnames,5,6))
h.ind; length(h.ind)
cnames <- colnames(data.norm.mouse)
h.ind <- as.numeric(substr(cnames,5,6))
h.ind; length(h.ind)
h.ind
h.ind; length(h.ind)
h.ind[2:97] <- h.ind[2:97] + 3
t.v <- h.ind
names(t.v) <- cnames; print(t.v)
day.ind <- ceiling(unique(t.v)/24)
day.ind
day.col <- rainbow(6)
day.col[2]<-"yellow2"
names(day.col) <- sort(unique(day.ind))
day.col.pool.m <- day.col[as.character(day.ind)]
length(data.norm.mouse[input$gene,])
dim(data.norm.mouse[input$gene,])
dim(data.norm.mouse[])
dim(data.norm.human)
pool.in <- read.csv("~/Desktop/HUMAN_normEC.csv",row.names=1)
data.norm.human <- data.matrix(pool.in)+1
pool.in <- read.csv("~/Desktop/MOUSE_normEC.csv",row.names=1)
data.norm.mouse <- data.matrix(pool.in)+1
cnames <- colnames(data.norm.human)
h.ind <- as.numeric(substr(cnames,2,4))
h.ind; length(h.ind)
h.ind[2:101] <- h.ind[2:101] + 3
t.v <- h.ind
names(t.v) <- cnames; print(t.v)
day.ind <- ceiling(unique(t.v)/24)
day.col <- rainbow(6)
day.col[2]<-"yellow2"
names(day.col) <- sort(unique(day.ind))
day.col.pool.h <- day.col[as.character(day.ind)]
cnames <- colnames(data.norm.mouse)
h.ind <- as.numeric(substr(cnames,5,6))
h.ind; length(h.ind)
h.ind[2:97] <- h.ind[2:97] + 3
t.v <- h.ind
names(t.v) <- cnames; print(t.v)
day.ind <- ceiling(unique(t.v)/24)
day.col <- rainbow(6)
day.col[2]<-"yellow2"
names(day.col) <- sort(unique(day.ind))
day.col.pool.m <- day.col[as.character(day.ind)]
par(mfrow=c(2,2),cex.lab=1.6, cex.axis=1.4, cex.main=1.7)
plot(1:101, data.norm.human[input$gene,]-1, pch=20, col=day.col.pool.h, main=paste0(input$name,", human"),
ylab="Normalized Expression", xlab="Hour")
plot(1:97, data.norm.mouse[input$gene,]-1, pch=20, col=day.col.pool.m, main=paste0(input$name,", mouse"),
ylab="Normalized Expression", xlab="Hour")
plot(1:101, log(data.norm.human[input$gene,]), pch=20, col=day.col.pool.h, main=paste0(input$name,", human"),
ylab="Log Normalized Expression", xlab="Hour")
plot(1:97, log(data.norm.mouse[input$gene,]), pch=20, col=day.col.pool.m, main=paste0(input$name,", mouse"),
ylab="Log Normalized Expression", xlab="Hour")
pdf("Desktop/test.pdf")
plot(1:101, data.norm.human[input$gene,]-1, pch=20, col=day.col.pool.h, main=paste0(input$name,", human"),
ylab="Normalized Expression", xlab="Hour")
plot(1:97, data.norm.mouse[input$gene,]-1, pch=20, col=day.col.pool.m, main=paste0(input$name,", mouse"),
ylab="Normalized Expression", xlab="Hour")
input <- c()
input$gene = "T"
par(mfrow=c(2,2),cex.lab=1.6, cex.axis=1.4, cex.main=1.7)
plot(1:101, data.norm.human[input$gene,]-1, pch=20, col=day.col.pool.h, main=paste0(input$name,", human"),
ylab="Normalized Expression", xlab="Hour")
plot(1:97, data.norm.mouse[input$gene,]-1, pch=20, col=day.col.pool.m, main=paste0(input$name,", mouse"),
ylab="Normalized Expression", xlab="Hour")
plot(1:101, log(data.norm.human[input$gene,]), pch=20, col=day.col.pool.h, main=paste0(input$name,", human"),
ylab="Log Normalized Expression", xlab="Hour")
plot(1:97, log(data.norm.mouse[input$gene,]), pch=20, col=day.col.pool.m, main=paste0(input$name,", mouse"),
ylab="Log Normalized Expression", xlab="Hour")
dev.off()
pdf("Desktop/test.pdf")
par(mfrow=c(2,2),cex.lab=1.6, cex.axis=1.4, cex.main=1.7, mar=c(5,5,1,1))
plot(1:101, data.norm.human[input$gene,]-1, pch=20, col=day.col.pool.h, main=paste0(input$gene,", human"),
ylab="Normalized Expression", xlab="Hour")
plot(1:97, data.norm.mouse[input$gene,]-1, pch=20, col=day.col.pool.m, main=paste0(input$gene,", mouse"),
ylab="Normalized Expression", xlab="Hour")
plot(1:101, log(data.norm.human[input$gene,]), pch=20, col=day.col.pool.h, main=paste0(input$gene,", human"),
ylab="Log Normalized Expression", xlab="Hour")
plot(1:97, log(data.norm.mouse[input$gene,]), pch=20, col=day.col.pool.m, main=paste0(input$gene,", mouse"),
ylab="Log Normalized Expression", xlab="Hour")
dev.off()
pdf("Desktop/test.pdf")
par(mfrow=c(2,2),cex.lab=1.6, cex.axis=1.4, cex.main=1.7, mar=c(5,5,2,1))
plot(1:101, data.norm.human[input$gene,]-1, pch=20, col=day.col.pool.h, main=paste0(input$gene,", human"),
ylab="Normalized Expression", xlab="Hour")
plot(1:97, data.norm.mouse[input$gene,]-1, pch=20, col=day.col.pool.m, main=paste0(input$gene,", mouse"),
ylab="Normalized Expression", xlab="Hour")
plot(1:101, log(data.norm.human[input$gene,]), pch=20, col=day.col.pool.h, main=paste0(input$gene,", human"),
ylab="Log Normalized Expression", xlab="Hour")
plot(1:97, log(data.norm.mouse[input$gene,]), pch=20, col=day.col.pool.m, main=paste0(input$gene,", mouse"),
ylab="Log Normalized Expression", xlab="Hour")
dev.off()
rownames(data.norm.mouse) <- toupper(rownames(data.norm.mouse))
input$gene = "SOX17"
pdf("Desktop/test.pdf")
par(mfrow=c(2,2),cex.lab=1.6, cex.axis=1.4, cex.main=1.7, mar=c(5,5,2,1))
plot(1:101, data.norm.human[input$gene,]-1, pch=20, col=day.col.pool.h, main=paste0(input$gene,", human"),
ylab="Normalized Expression", xlab="Hour")
plot(1:97, data.norm.mouse[input$gene,]-1, pch=20, col=day.col.pool.m, main=paste0(input$gene,", mouse"),
ylab="Normalized Expression", xlab="Hour")
plot(1:101, log(data.norm.human[input$gene,]), pch=20, col=day.col.pool.h, main=paste0(input$gene,", human"),
ylab="Log Normalized Expression", xlab="Hour")
plot(1:97, log(data.norm.mouse[input$gene,]), pch=20, col=day.col.pool.m, main=paste0(input$gene,", mouse"),
ylab="Log Normalized Expression", xlab="Hour")
dev.off()
pool.in <- read.csv("~/Desktop/HUMAN_normEC.csv",row.names=1)
data.norm.human <- data.matrix(pool.in)+1
pool.in <- read.csv("~/Desktop/MOUSE_normEC.csv",row.names=1)
data.norm.mouse <- data.matrix(pool.in)+1
ognames <- rownames(data.norm.mouse)
rownames(data.norm.mouse) <- toupper(rownames(data.norm.mouse))
names(ognames) <- rownames(data.norm.mouse)
input = NULL
input$gene = "SOX17"
plot(1:101, data.norm.human[input$gene,]-1, pch=20, col="red", main=paste0(input$gene,", human"),
ylab="Normalized Expression", xlab="Hour")
abline(lm(data.norm.human[input$gene,]-1 ~ poly(seq(1:101),3)))
lines(1:101, lm(data.norm.human[input$gene,]-1 ~ poly(seq(1:101),3))$fitted)
lines(1:101, lm(data.norm.human[input$gene,]-1 ~ poly(seq(1:101),4))$fitted, lwd=2)
lines(1:101, lm(data.norm.human[input$gene,]-1 ~ poly(seq(1:101),2))$fitted, lwd=2)
plot(1:101, data.norm.human[input$gene,]-1, pch=20, col="red", main=paste0(input$gene,", human"),
ylab="Normalized Expression", xlab="Hour")
lines(1:101, lm(data.norm.human[input$gene,]-1 ~ poly(seq(1:101),3))$fitted, lwd=2)
plot(1:97, data.norm.mouse[input$gene,]-1, pch=20, col="blue", main=paste0(ognames[input$gene],", mouse"),
ylab="Normalized Expression", xlab="Hour")
lines(1:97, lm(data.norm.mouse[input$gene,]-1 ~ poly(seq(1:97),3))$fitted, lwd=2)
plot(1:101, log(data.norm.human[input$gene,]), pch=20, col="red", main=paste0(input$gene,", human"),
ylab="Log Normalized Expression", xlab="Hour")
lines(1:101, log(data.norm.human[input$gene,]) ~ poly(seq(1:101),3))$fitted, lwd=2)
plot(1:97, log(data.norm.mouse[input$gene,]), pch=20, col="blue", main=paste0(ognames[input$gene],", mouse"),
ylab="Log Normalized Expression", xlab="Hour")
plot(1:101, log(data.norm.human[input$gene,]), pch=20, col="red", main=paste0(input$gene,", human"),
ylab="Log Normalized Expression", xlab="Hour")
lines(1:101, lm(log(data.norm.human[input$gene,]) ~ poly(seq(1:101),3))$fitted, lwd=2)
plot(1:97, log(data.norm.mouse[input$gene,]), pch=20, col="blue", main=paste0(ognames[input$gene],", mouse"),
ylab="Log Normalized Expression", xlab="Hour")
lines(1:97, lm(log(data.norm.mouse[input$gene,]) ~ poly(seq(1:97),3))$fitted, lwd=2)
library(shiny)
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
runApp("Desktop/TimeCourse-plot/")
